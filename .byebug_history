c
cc
c
form_group.first[:form_identify] == form_identify
form_group.first[:form_identify]
form_group.first
form_group
form_identify
form_group.any? {|form| form[:form_identify] == form_identify}
s
n
_forms
c
Jsj::FormInfos.get_form_type(jsj_form.form_identify)
jsj_form.form_identify
form_type
c
f
c
cert_parser.cert_bg_type
c
Backend::Conference.all
Backend::Conference
c
Backend::AttendDatum.second.attributes
Backend::AttendDatum.first.attributes
Backend::AttendDatum.first
c
quir
rec.errors
rec.error
rec.save
rec
rec.error
rec.errors
activerecord.errors
 Backend::AttendDatum.errors
datum["序号"]
Backend::AttendDatum.columns
 Backend::AttendDatum.local_id
form.id
conference.id
Rails.error
rails
error
s
c
datum["银行转账确认"]
datum["姓名"]
Backend::AttendDatum.count
Backend::AttendDatum.length
n
datum
s
attend_data
c
quit
c
conference
conferece
c
id
n
form_identify
continue
@attend_data[0]
@attend_data[1]
form_identify
c
headers
headers[0]
form_identify
c
headers
form_identify
form_info
c
Backend::Conference.all
c
Backend::Conference.all
c
Backend::Conference.all
c
Backend::Conference.all
sheet.parse(headers: true, skip_blanks: true).slice(1,3)
c
Backend::Conference.all
c
@attend_data
c
sheet.parse(headers: true, skip_blanks: true).slice(1,2)
sheet.parse(headers: true, skip_blanks: true).slice(1,3)
sheet.parse(headers: true, skip_blanks: true).slice(0,3)
sheet.parse(headers: true, skip_blanks: true).slice(0,2)
sheet.parse(headers: true, skip_blanks: true).slice(1,-1)
sheet.parse(headers: true, skip_blanks: true).slice(1,2)
sheet.parse(headers: true, skip_blanks: true)[0, -1]
sheet.parse(headers: true, skip_blanks: true)[1, -1]
sheet.parse(headers: true, skip_blanks: true)[1,2]
sheet.parse(headers: true, skip_blanks: true)[-1]
sheet.parse(headers: true, skip_blanks: true)[2]
sheet.parse(headers: true, skip_blanks: true)[1]
sheet.parse(headers: true, skip_blanks: true)(1,-1)
sheet.parse(headers: true, skip_blanks: true)[1,-1]
sheet.parse(headers: true, skip_blanks: true)
sheet.row 1
sheet.row
sheet.rows
sheet
c
file_path
@attend_data
c
Jsj::RenderPdfs.assets_path.to_s
Jsj::RenderPdfs.assets_path.join('images', 'certs')
"#{Jsj::RenderPdfs.font_path}/FZ30.TTF"
Jsj::RenderPdfs.assets_path.to_s
Jsj::RenderPdfs.assets_path
